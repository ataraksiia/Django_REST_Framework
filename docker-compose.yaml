services:
  web:
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      POSTGRES_HOST: "localhost"
      POSTGRES_DB: skypro_hw
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    restart: unless-stopped

  db:
    image: postgres:latest
    volumes:
     - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d skypro_hw"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery:
    build: .
    command: ["poetry", "run", "celery", "-A", "config", "worker", "-l", "info"]
    depends_on:
      - redis
      - db
    env_file:
      - .env
    restart: unless-stopped

  celery_beat:
    build: .
    command: ["poetry", "run", "celery", "-A", "config", "beat", "-l", "info"]
    depends_on:
      - redis
      - db
    env_file:
      - .env
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
